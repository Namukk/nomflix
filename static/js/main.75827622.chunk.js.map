{"version":3,"sources":["assets/namuk.JPG","Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","exact","path","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75827622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/namuk.756e844e.JPG\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.3s linear;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\", // 끝에 절대경로 \"/\" 붙여줘야 12번째 줄 get 함수에 상대경로 사용 가능 즉 \"/\"를 안붙일 수 있음.\n  params: {\n    api_key: \"fdbd35f117fcb9a07f0cffe0a1b54c3e\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 50px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n);\n\n// const Loader = () => <Container>⏰</Container>;\n\n// export default Loader\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n      transform: scale(1.2, 1.2);\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/namuk.JPG\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  imageUrl: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","//presenter는 스타일 담당: 컨테이너가 처리한 데이터들을 보여주는 역할을 하는 함수영 컴포넌트. state, api, class 다루지 않음.\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movie | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n//   loading ? null : ( if there is loading render null else\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","//container은 데이터 담당 : data와 state(상태값)을 가지고, api를 불러와 모든 로직 처리\nimport React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader /> // if there is loading render null else\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Show\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}{\" \"}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or Tv Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing Found\" color=\"#95a5a6\"></Message>\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault(); // 이거 안해주면 서치에서 엔터누를 때마다 submit 되면서 페이지 refresh되고 나의 state를 잃게됨.\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async (term) => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n//span은 margin bottom이 없음.\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : require(\"../../assets/namuk.JPG\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\n              mins\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n              {/* map에는 index가 자동으로 주어짐 */}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n      //const isMovie = (pathname) => pathname.includes(\"/movie/\")를 componentDidMount에 넣는 대신에 전체 class에 넣어주기 위해서 (렌더링 할 것이 없을 때 사용 가능. 만약에 뭔가를 렌더링 하려면 this.state에 넣어야 함.)\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props; //parseInt(id) id라는 string을 숫자로 변환 if it is not number it return NaN.\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n        //양쪽 끝에 ()를 붙인 것. = 앞에 const= 붙인 것 let으로 지정해준 result에 덮어 써야 때문에 const를 쓸 수 없음.\n      } else {\n        ({ data: result } = await tvApi.tvDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      {/* exact를 붙여줘야 정확히 일치하는 것만 인정. ex) /login, /course, /join 다 /로 인식됨. */}\n      <Route exact path=\"/tv\" component={TV} />\n      {/* <Route path= \"/tv/popular\" render={() => <h1>Popular</h1>} />을 이용하면 두개 이상의 Route 랜더링 가능 = Composition */}\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/tv/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n      {/* 일치하는 route가 하나도 없을시(이상한 route로 넘어가면) home으로 redirect 시켜줌. // switch는 한번에 하나의 route만 렌더링(두개의 route 한번에 렌더링 되는 것 방지.) */}\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </> //원래 React는 하나의 components만 return 가능 하지만 <></> 안에 집어넣으면 여러개 return 가능\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\"; // .env 1번 줄이 src폴더부터 탐색하게 만들었기 때문에 그냥 \"Components/App\" 해도 됨.\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}